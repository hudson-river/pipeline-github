#!/usr/bin/env groovy

String helpMessage =
"""

* `/hudson help` -- this help
* `/hudson ping` -- pong
* `/hudson prenv` -- start a new prenv"""

String formatDetails(String summary, String details) {
    sprintf("<details>\n<summary>%s</summary>\n<br />%s</details>", summary, details)
}

pipeline {
    agent any

    triggers {
        issueCommentTrigger('^/hudson .*')
    }

    options {
        timestamps()
        buildDiscarder(logRotator(numToKeepStr: env.BRANCH_NAME == 'master' ? '10' : '2'))
    }

    stages {
        stage('Hudson') {
            steps {
                script {
                    if (env.CHANGE_ID) {
                        def triggerCause = currentBuild.rawBuild.getCause(org.jenkinsci.plugins.pipeline.github.trigger.IssueCommentCause)

                        if (triggerCause) {
                            def comment = triggerCause.comment
                            if (comment =~ /^\/hudson .*/) {
                                // This is a command, mark the command as handled, and handle it
                                if (comment == "/hudson ping") {
                                    pullRequest.comment("PONG")
                                    handled = true
                                } else if (comment == "/hudson prenv") {
                                    pullRequest.comment("Starting a new pull request environment for branch ${env.CHANGE_BRANCH}")
                                    handled = true
                                } else if (comment == "/hudson help" || comment == "/hudson ?") {
                                    pullRequest.comment(helpMessage)
                                }
                            }
                        } else {
                            // Check if a help-comment has been displayed
                            String helpComment = formatDetails("Hudson commands", helpMessage)
                            if (!pullRequest.comments.any { it.body == helpComment }) {
                                pullRequest.comment(formatDetails("Hudson commands", helpMessage))
                            }
                        }
                    } else {
                        echo "NOT a PR"
                    }
                }
            }
        }
    }
}

